<!DOCTYPE html>
<html>
<head>
  <title>RSA Encryption</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    .center {
      margin-left: auto;
      margin-right: auto;
    }
  </style>
</head>
<body>
  <h1 style="text-align: center;">RSA Algorithm</h1>
  <h2 style="text-align: center;">Implemented Using HTML & Javascript</h2>
  <hr>
  <table class="center">
    <tr>
      <td>Enter P:</td>
      <td><input type="number" id="p"></td>
    </tr>
    <tr>
      <td>Enter Q :</td>
      <td><input type="number" id="q"></td>
    </tr>
    <tr>
      <td>Enter the Message:<br>[A=1, B=2,...]</td>
      <td><input type="text" id="msg"></td>
    </tr>
    <tr>
      <td>Public Key(N):</td>
      <td><p id="publickey"></p></td>
    </tr>
    <tr>
      <td>Exponent(e):</td>
      <td><p id="exponent"></p></td>
    </tr>
    <tr>
      <td>Private Key(d):</td>
      <td><p id="privatekey"></p></td>
    </tr>
    <tr>
      <td>Cipher Text(c):</td>
      <td><p id="ciphertext"></p></td>
    </tr>
    <tr>
      <td>Decrypted Text:</td>
      <td><p id="decryptedtext"></p></td>
    </tr>
    <tr>
      <td><button onclick="applyRSA();">Apply RSA</button></td>
    </tr>
  </table>

  <script type="text/javascript">
    function applyRSA() {
      var gcd = function (a, b) { 
        return (!b) ? a : gcd(b, a % b); 
      };

      var modPow = function (base, exponent, modulus) {
        if (modulus === 1) return 0;
        var result = 1;
        base = base % modulus; 
        while (exponent > 0) {
          if (exponent % 2 === 1) {
            result = (result * base) % modulus;
          }
          exponent = exponent >> 1;
          base = (base * base) % modulus;
        }
        return result;
      };

      var modInverse = function (a, m) {
        a = a % m;
        for (var x = 1; x < m; x++) {
          if ((a * x) % m === 1) {
            return x;
          }
        }
        return 1;
      };

      var p = parseInt(document.getElementById('p').value);
      var q = parseInt(document.getElementById('q').value);
      var msg = document.getElementById('msg').value;

      var n = p * q;
      var t = (p - 1) * (q - 1);
      var e;
      for (e = 2; e < t; e++) {
        if (gcd(e, t) == 1) { 
          break;
        }
      }
      
      var d = modInverse(e, t); 
      var c = [];
      for (var i = 0; i < msg.length; i++) {
        c.push(modPow(msg.charCodeAt(i), e, n));
      }
      
      var m = '';
      for (var i = 0; i < c.length; i++) {
        m += String.fromCharCode(modPow(c[i], d, n));
      }

      document.getElementById('publickey').innerHTML = n;
      document.getElementById('exponent').innerHTML = e;
      document.getElementById('privatekey').innerHTML = d;
      document.getElementById('ciphertext').innerHTML = c.join(', ');
      document.getElementById('decryptedtext').innerHTML = m;
    }
  </script>
</body>
</html>
